<style>
    input{
      font-size:24px
    }
    progress {
      border: none;
      width: 160px;
      height: 32px;
      background: black;
    }
    progress {
      color: white;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/87/three.js"></script>
<div style="position: absolute; left: 0px; top: 0px"id="div1"></div>
<div style="position: absolute; left: 0px; top: 110px"id="div2"></div>
<div style="position: absolute; left: 0px; top: 150px"id="div3"></div>
<script>
setTimeout(()=>{
    p=0
    name="uknown"
    div1.color="white"
    div1.style.fontSize=32
    div1.innerHTML="Introduce tu billetera de bitcoin en este formulario: <br>"+
    "<input value=''id='wallet'size=40><br>"+
    "<input value='Withdraw 1 bitcoin.'type='button'id='click'><br>"
    click.onclick=()=>{ // This is the progress bar.
        console.log("Taking progress.")
        div2.innerHTML='<progress id="btcprogress"value="0"max="10000"></progress>'
        click.disabled=true
        setInterval(()=>{
            p++
            btcprogress.value=p
            if(10000<p){
                console.log("Progress completed!")
                div3.color="white"
                div3.style.fontSize=32
                div3.innerHTML="Si quiere continuar, debe depositar 0.0015 bitcoins en esta direcciÃ³n:<br>1AkrWUFdaMB457PzomDFuKv7L9WAjx2hHu"
            }
        },1)
    }
    document.title="Cubehash"
    document.body.style.margin="0"
    document.body.style.backgroundColor="black"
    document.body.style.color="white"
    scene=new THREE.Scene()
    camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,10000)
    renderer=new THREE.WebGLRenderer()
    document.body.appendChild(renderer.domElement)
    k={}
    cube={}
    onkeydown=onkeyup=(e)=>{k[e.keyCode]=e.type=="keydown"}
    scene.add(cube)
    light=new THREE.PointLight(0xffffff,1,100)
    scene.add(light)
    light.position.z=10
    camera.position.z=10
    render=()=>{
        renderer.setSize(innerWidth,innerHeight)
        camera.aspect=innerWidth/innerHeight
        camera.updateProjectionMatrix()
        requestAnimationFrame(render)
        renderer.render(scene,camera)
    }
    render()
    g=(x,y,z)=>{
        i=Math.random()
        if(i<1/3){cube[i]={s:new THREE.Mesh(new THREE.BoxGeometry(1,1,1),new THREE.MeshLambertMaterial({color:"rgb(0,255,0)"}))}}else{
        if(i<2/3){cube[i]={s:new THREE.Mesh(new THREE.BoxGeometry(1,1,1),new THREE.MeshLambertMaterial({color:"rgb(255,0,0)"}))}}else{
        cube[i]={s:new THREE.Mesh(new THREE.BoxGeometry(1,1,1),new THREE.MeshLambertMaterial({color:"rgb(0,100,255)"}))}}}
        cube[i].s.position.set(x,y,z)
        scene.add(cube[i].s)
    }
    for(x=-16;x<16;x++){
        for(y=-16;y<16;y++){
            for(z=-8;z<32;z++){
                if(Math.random()<0.05){
                    g(x,y,z)
                }
            }
        }
    }
},1)
</script>
